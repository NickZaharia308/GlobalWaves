Starting audit...
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/page/PrintCurrentPage.java:7:8: Unused import - userEntities.audio.Playlists. [UnusedImports]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/page/PrintCurrentPage.java:8:8: Unused import - userEntities.audio.Songs. [UnusedImports]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/page/PrintCurrentPage.java:10:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/page/PrintCurrentPage.java:16:5: Class 'PrintCurrentPage' looks like designed for extension (can be subclassed), but the method 'returnPrintCurrentPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PrintCurrentPage' final or making the method 'returnPrintCurrentPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/page/PrintCurrentPage.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/page/PrintCurrentPage.java:33:5: Class 'PrintCurrentPage' looks like designed for extension (can be subclassed), but the method 'setMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PrintCurrentPage' final or making the method 'setMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/page/PrintCurrentPage.java:33:28: Parameter message should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/page/ChangePage.java:11:12: Variable 'message' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/page/ChangePage.java:13:5: Class 'ChangePage' looks like designed for extension (can be subclassed), but the method 'returnChangePage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChangePage' final or making the method 'returnChangePage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/page/ChangePage.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/page/ChangePage.java:26:52: '||' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/page/ChangePage.java:41:5: Class 'ChangePage' looks like designed for extension (can be subclassed), but the method 'setMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChangePage' final or making the method 'setMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/page/ChangePage.java:41:28: Parameter message should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/statistics/GetAllUsers.java:11:5: Class 'GetAllUsers' looks like designed for extension (can be subclassed), but the method 'returnGetAllUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetAllUsers' final or making the method 'returnGetAllUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/statistics/GetAllUsers.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/statistics/GetOnlineUsers.java:10:5: Class 'GetOnlineUsers' looks like designed for extension (can be subclassed), but the method 'returnGetOnlineUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetOnlineUsers' final or making the method 'returnGetOnlineUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/statistics/GetOnlineUsers.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/searchBar/Load.java:6:8: Unused import - userEntities.MusicPlayer. [UnusedImports]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/searchBar/Load.java:37:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/searchBar/Search.java:278:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/searchBar/Search.java:303:66: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/searchBar/Select.java:53:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/searchBar/Select.java:84:32: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/searchBar/Select.java:84:44: Parameter library should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/searchBar/Select.java:84:61: Parameter itemNumber should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/searchBar/Select.java:163:31: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/searchBar/Select.java:163:43: Parameter itemNumber should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/searchBar/Select.java:170:61: '+' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/searchBar/Select.java:172:61: '+' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/AddRemoveInPlaylist.java:41:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/Shuffle.java:42:59: '||' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/Shuffle.java:55:34: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/Shuffle.java:55:35: Parameter command should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/Shuffle.java:55:52: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/Shuffle.java:60:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/Shuffle.java:85:31: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/Shuffle.java:85:32: Parameter command should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/Shuffle.java:85:49: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/AddPodcast.java:4:8: Unused import - com.fasterxml.jackson.databind.node.ArrayNode. [UnusedImports]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/AddPodcast.java:8:8: Unused import - userEntities.Artist. [UnusedImports]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/AddPodcast.java:11:8: Unused import - userEntities.audio.Album. [UnusedImports]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/AddPodcast.java:14:8: Unused import - userEntities.audio.Songs. [UnusedImports]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/AddPodcast.java:24:5: Class 'AddPodcast' looks like designed for extension (can be subclassed), but the method 'returnAddPodcast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddPodcast' final or making the method 'returnAddPodcast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/AddPodcast.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/AddPodcast.java:82:5: Class 'AddPodcast' looks like designed for extension (can be subclassed), but the method 'hasDuplicateEpisodes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddPodcast' final or making the method 'hasDuplicateEpisodes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/AddPodcast.java:82:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/AddPodcast.java:82:41: Parameter podcastEpisodes should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/AddPodcast.java:98:5: Class 'AddPodcast' looks like designed for extension (can be subclassed), but the method 'addPodcastToUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddPodcast' final or making the method 'addPodcastToUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/AddPodcast.java:98:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/AddPodcast.java:98:58: Parameter podcast should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/AddPodcast.java:109:5: Class 'AddPodcast' looks like designed for extension (can be subclassed), but the method 'setMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddPodcast' final or making the method 'setMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/AddPodcast.java:109:28: Parameter message should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/AddAnnouncement.java:16:5: Class 'AddAnnouncement' looks like designed for extension (can be subclassed), but the method 'returnAddAnnouncement' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddAnnouncement' final or making the method 'returnAddAnnouncement' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/AddAnnouncement.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/AddAnnouncement.java:40: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/AddAnnouncement.java:51:5: Class 'AddAnnouncement' looks like designed for extension (can be subclassed), but the method 'setMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddAnnouncement' final or making the method 'setMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/AddAnnouncement.java:51:28: Parameter message should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/RemoveAnnouncement.java:16:5: Class 'RemoveAnnouncement' looks like designed for extension (can be subclassed), but the method 'returnRemoveAnnouncement' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RemoveAnnouncement' final or making the method 'returnRemoveAnnouncement' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/RemoveAnnouncement.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/RemoveAnnouncement.java:57:5: Class 'RemoveAnnouncement' looks like designed for extension (can be subclassed), but the method 'setMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RemoveAnnouncement' final or making the method 'setMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/RemoveAnnouncement.java:57:28: Parameter message should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/RemovePodcast.java:15:12: Variable 'message' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/RemovePodcast.java:17:5: Class 'RemovePodcast' looks like designed for extension (can be subclassed), but the method 'returnRemovePodcast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RemovePodcast' final or making the method 'returnRemovePodcast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/RemovePodcast.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/RemovePodcast.java:56:39: '+' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/RemovePodcast.java:59:37: Parameter library should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/RemovePodcast.java:59:54: Parameter command should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/RemovePodcast.java:59:71: Parameter podcastToDelete should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/RemovePodcast.java:69: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/RemovePodcast.java:76:5: Class 'RemovePodcast' looks like designed for extension (can be subclassed), but the method 'setMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RemovePodcast' final or making the method 'setMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/host/RemovePodcast.java:76:28: Parameter message should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/SwitchConnectionStatus.java:4:1: Redundant import from the same package - commands.users.Status. [RedundantImport]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/SwitchConnectionStatus.java:13:5: Class 'SwitchConnectionStatus' looks like designed for extension (can be subclassed), but the method 'returnSwitchConnectionStatus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SwitchConnectionStatus' final or making the method 'returnSwitchConnectionStatus' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/SwitchConnectionStatus.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/SwitchConnectionStatus.java:44:5: Class 'SwitchConnectionStatus' looks like designed for extension (can be subclassed), but the method 'setMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SwitchConnectionStatus' final or making the method 'setMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/SwitchConnectionStatus.java:44:28: Parameter message should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/Repeat.java:28:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/Prev.java:7:26: Using the '.*' form of import should be avoided - userEntities.audio.*. [AvoidStarImport]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/Status.java:33:5: Method length is 516 lines (max allowed is 150). [MethodLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/Status.java:43:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/Status.java:52: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/Status.java:188:25: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/Status.java:257:25: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/Status.java:294:67: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddMerch.java:8:8: Unused import - userEntities.specialEntities.Event. [UnusedImports]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddMerch.java:17:5: Class 'AddMerch' looks like designed for extension (can be subclassed), but the method 'returnAddMerch' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddMerch' final or making the method 'returnAddMerch' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddMerch.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddMerch.java:57:5: Class 'AddMerch' looks like designed for extension (can be subclassed), but the method 'setMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddMerch' final or making the method 'setMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddMerch.java:57:28: Parameter message should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveAlbum.java:4:8: Unused import - commands.users.Shuffle. [UnusedImports]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveAlbum.java:20:5: Class 'RemoveAlbum' looks like designed for extension (can be subclassed), but the method 'returnRemoveAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RemoveAlbum' final or making the method 'returnRemoveAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveAlbum.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveAlbum.java:60:39: '+' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveAlbum.java:63:35: Parameter library should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveAlbum.java:63:52: Parameter command should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveAlbum.java:63:69: Parameter albumToDelete should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveAlbum.java:94:44: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveAlbum.java:94:45: Parameter library should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveAlbum.java:94:62: Parameter command should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveAlbum.java:94:79: Parameter albumToDelete should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveAlbum.java:121: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveAlbum.java:124: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveAlbum.java:133:42: Parameter playlist should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveAlbum.java:133:62: Parameter songsToRemove should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveAlbum.java:140: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveAlbum.java:149: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveAlbum.java:149:43: Parameter likedSongs should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveAlbum.java:149:72: Parameter songsToRemove should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveAlbum.java:162:5: Class 'RemoveAlbum' looks like designed for extension (can be subclassed), but the method 'setMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RemoveAlbum' final or making the method 'setMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveAlbum.java:162:28: Parameter message should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveEvent.java:16:5: Class 'RemoveEvent' looks like designed for extension (can be subclassed), but the method 'returnRemoveEvent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RemoveEvent' final or making the method 'returnRemoveEvent' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveEvent.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveEvent.java:56:5: Class 'RemoveEvent' looks like designed for extension (can be subclassed), but the method 'setMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RemoveEvent' final or making the method 'setMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/RemoveEvent.java:56:28: Parameter message should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddEvent.java:18:5: Class 'AddEvent' looks like designed for extension (can be subclassed), but the method 'returnAddEvent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddEvent' final or making the method 'returnAddEvent' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddEvent.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddEvent.java:61:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddEvent.java:61:42: Parameter username should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddEvent.java:61:59: Parameter dateString should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddEvent.java:70:23: '28' is a magic number. [MagicNumber]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddEvent.java:71: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddEvent.java:74:23: '31' is a magic number. [MagicNumber]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddEvent.java:74:37: '12' is a magic number. [MagicNumber]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddEvent.java:74:50: '1900' is a magic number. [MagicNumber]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddEvent.java:74:65: '2023' is a magic number. [MagicNumber]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddEvent.java:75: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddEvent.java:79: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddEvent.java:83:5: Class 'AddEvent' looks like designed for extension (can be subclassed), but the method 'setMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddEvent' final or making the method 'setMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddEvent.java:83:28: Parameter message should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddAlbum.java:21:5: Class 'AddAlbum' looks like designed for extension (can be subclassed), but the method 'returnAddAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddAlbum' final or making the method 'returnAddAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddAlbum.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddAlbum.java:85: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddAlbum.java:94:5: Class 'AddAlbum' looks like designed for extension (can be subclassed), but the method 'hasDuplicateSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddAlbum' final or making the method 'hasDuplicateSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddAlbum.java:94:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddAlbum.java:94:38: Parameter albumSongs should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddAlbum.java:110:5: Class 'AddAlbum' looks like designed for extension (can be subclassed), but the method 'setMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddAlbum' final or making the method 'setMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/artist/AddAlbum.java:110:28: Parameter message should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/users/Like.java:37:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/Command.java:7:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/Command.java:119:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/Command.java:119:24: Parameter age should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/Command.java:123:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/Command.java:123:25: Parameter city should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/Command.java:127:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/Command.java:127:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/Command.java:131:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/Command.java:131:32: Parameter description should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/Command.java:135:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/Command.java:135:26: Parameter songs should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/Command.java:139:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setEpisodes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setEpisodes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/Command.java:139:29: Parameter episodes should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/Command.java:143:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setReleaseYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setReleaseYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/Command.java:143:32: Parameter releaseYear should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/Command.java:147:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setDate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setDate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/Command.java:147:25: Parameter date should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/Command.java:151:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/Command.java:151:26: Parameter price should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/Command.java:155:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setNextPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setNextPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/Command.java:155:29: Parameter nextPage should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:23:5: Class 'DeleteUser' looks like designed for extension (can be subclassed), but the method 'returnDeleteUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeleteUser' final or making the method 'returnDeleteUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:23:34: Parameter command should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:28:34: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:68:34: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:68:35: Parameter command should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:69:34: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:87: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:101: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:115:45: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:115:46: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:115:58: Parameter library should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:151:32: Parameter command should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:152:34: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:164:49: '&&' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:168: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:178:43: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:178:55: Parameter library should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:202:43: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:202:55: Parameter library should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:210:53: '(' should be on the previous line. [MethodParamPad]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:214:32: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:214:33: Parameter command should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:215:34: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:230:49: '&&' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:234: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:244:43: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:244:44: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:244:56: Parameter library should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:260:5: Class 'DeleteUser' looks like designed for extension (can be subclassed), but the method 'setMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeleteUser' final or making the method 'setMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/DeleteUser.java:260:28: Parameter message should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/ShowPodcasts.java:12:5: Class 'ShowPodcasts' looks like designed for extension (can be subclassed), but the method 'returnShowPodcasts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShowPodcasts' final or making the method 'returnShowPodcasts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/ShowPodcasts.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/AddUser.java:16:5: Class 'AddUser' looks like designed for extension (can be subclassed), but the method 'returnAddUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddUser' final or making the method 'returnAddUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/AddUser.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/AddUser.java:21:34: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/AddUser.java:49:5: Class 'AddUser' looks like designed for extension (can be subclassed), but the method 'setMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddUser' final or making the method 'setMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/AddUser.java:49:28: Parameter message should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/ShowAlbums.java:12:5: Class 'ShowAlbums' looks like designed for extension (can be subclassed), but the method 'returnShowAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShowAlbums' final or making the method 'returnShowAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/commands/admin/ShowAlbums.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/MusicPlayer.java:1:9: Name 'userEntities' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/MusicPlayer.java:4:26: Using the '.*' form of import should be avoided - userEntities.audio.*. [AvoidStarImport]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/MusicPlayer.java:166:5: Class 'MusicPlayer' looks like designed for extension (can be subclassed), but the method 'setAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MusicPlayer' final or making the method 'setAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/MusicPlayer.java:166:26: Parameter album should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/MusicPlayer.java:170:5: Class 'MusicPlayer' looks like designed for extension (can be subclassed), but the method 'setAlbumShuffled' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MusicPlayer' final or making the method 'setAlbumShuffled' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/MusicPlayer.java:170:34: Parameter albumShuffled should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/audio/Podcasts.java:1:9: Name 'userEntities.audio' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/audio/Episodes.java:1:9: Name 'userEntities.audio' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/audio/Album.java:1:9: Name 'userEntities.audio' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/audio/Album.java:49:5: Class 'Album' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Album' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/audio/Album.java:49:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/audio/Album.java:53:5: Class 'Album' looks like designed for extension (can be subclassed), but the method 'setReleaseYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Album' final or making the method 'setReleaseYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/audio/Album.java:53:32: Parameter releaseYear should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/audio/Album.java:57:5: Class 'Album' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Album' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/audio/Album.java:57:32: Parameter description should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/audio/Album.java:61:5: Class 'Album' looks like designed for extension (can be subclassed), but the method 'setSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Album' final or making the method 'setSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/audio/Album.java:61:26: Parameter songs should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/audio/Album.java:65:5: Class 'Album' looks like designed for extension (can be subclassed), but the method 'setOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Album' final or making the method 'setOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/audio/Album.java:65:26: Parameter owner should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/audio/Songs.java:1:9: Name 'userEntities.audio' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/audio/Playlists.java:1:9: Name 'userEntities.audio' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/audio/Playlists.java:49:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Users.java:1:9: Name 'userEntities' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Users.java:225:5: Class 'Users' looks like designed for extension (can be subclassed), but the method 'setOnline' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Users' final or making the method 'setOnline' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Users.java:225:27: Parameter online should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Users.java:229:5: Class 'Users' looks like designed for extension (can be subclassed), but the method 'setUserType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Users' final or making the method 'setUserType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Users.java:229:29: Parameter userType should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Users.java:233:5: Class 'Users' looks like designed for extension (can be subclassed), but the method 'setFollowedPlaylists' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Users' final or making the method 'setFollowedPlaylists' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Users.java:233:38: Parameter followedPlaylists should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Users.java:237:5: Class 'Users' looks like designed for extension (can be subclassed), but the method 'setPageMenu' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Users' final or making the method 'setPageMenu' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Users.java:237:29: Parameter currentPage should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Users.java:237:38: 'currentPage' hides a field. [HiddenField]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Users.java:241:5: Class 'Users' looks like designed for extension (can be subclassed), but the method 'setCurrentPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Users' final or making the method 'setCurrentPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Users.java:241:32: Parameter currentPage should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Users.java:245:5: Class 'Users' looks like designed for extension (can be subclassed), but the method 'setPageSearched' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Users' final or making the method 'setPageSearched' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Users.java:245:33: Parameter pageSearched should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Announcement.java:1:9: Name 'userEntities.specialEntities' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Announcement.java:10:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Announcement.java:10:38: Parameter description should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Announcement.java:15:5: Class 'Announcement' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Announcement' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Announcement.java:15:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Announcement.java:19:5: Class 'Announcement' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Announcement' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Announcement.java:19:32: Parameter description should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:1:9: Name 'userEntities.specialEntities' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:15:10: Variable 'currentPage' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:24:5: Class 'PageMenu' looks like designed for extension (can be subclassed), but the method 'setPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PageMenu' final or making the method 'setPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:24:25: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:24:37: Parameter library should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:24:54: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:37:33: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:66:41: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:72: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:81: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:92:5: Class 'PageMenu' looks like designed for extension (can be subclassed), but the method 'setArtistPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PageMenu' final or making the method 'setArtistPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:92:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:92:31: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:92:43: Parameter library should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:92:60: Parameter artistName should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:96: Line is longer than 100 characters (found 123). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:102:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:108:5: Class 'PageMenu' looks like designed for extension (can be subclassed), but the method 'setHostPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PageMenu' final or making the method 'setHostPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:108:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:108:29: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:108:41: Parameter library should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:108:58: Parameter hostName should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:112: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:118:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:124:5: Class 'PageMenu' looks like designed for extension (can be subclassed), but the method 'setCurrentPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PageMenu' final or making the method 'setCurrentPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:124:32: Parameter currentPage should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:128:5: Class 'PageMenu' looks like designed for extension (can be subclassed), but the method 'setPageOwnerName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PageMenu' final or making the method 'setPageOwnerName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/PageMenu.java:128:34: Parameter pageOwnerName should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Merch.java:1:9: Name 'userEntities.specialEntities' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Merch.java:11:18: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Merch.java:11:19: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Merch.java:11:32: Parameter description should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Merch.java:11:52: Parameter price should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Merch.java:18:5: Class 'Merch' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Merch' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Merch.java:18:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Merch.java:22:5: Class 'Merch' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Merch' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Merch.java:22:32: Parameter description should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Merch.java:26:5: Class 'Merch' looks like designed for extension (can be subclassed), but the method 'setPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Merch' final or making the method 'setPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Merch.java:26:26: Parameter price should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Event.java:1:9: Name 'userEntities.specialEntities' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Event.java:11:18: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Event.java:11:31: Parameter description should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Event.java:11:51: Parameter date should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Event.java:17:5: Class 'Event' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Event' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Event.java:17:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Event.java:21:5: Class 'Event' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Event' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Event.java:21:32: Parameter description should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Event.java:25:5: Class 'Event' looks like designed for extension (can be subclassed), but the method 'setDate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Event' final or making the method 'setDate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/specialEntities/Event.java:25:25: Parameter date should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Host.java:1:9: Name 'userEntities' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Host.java:3:8: Unused import - com.fasterxml.jackson.annotation.JsonGetter. [UnusedImports]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Host.java:30:5: Class 'Host' looks like designed for extension (can be subclassed), but the method 'setPodcasts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Host' final or making the method 'setPodcasts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Host.java:30:29: Parameter podcasts should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Host.java:34:5: Class 'Host' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Host' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Host.java:51: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Host.java:52: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Host.java:52:103: '&&' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Host.java:54: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Host.java:57: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Host.java:72: Line is longer than 100 characters (found 125). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Host.java:75: Line is longer than 100 characters (found 126). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Artist.java:1:9: Name 'userEntities' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Artist.java:29:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'setAlbums' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'setAlbums' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Artist.java:29:27: Parameter albums should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Artist.java:33:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'setEvents' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'setEvents' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Artist.java:33:27: Parameter events should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Artist.java:37:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'setMerchandise' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'setMerchandise' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Artist.java:37:32: Parameter merchandise should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Artist.java:41:5: Class 'Artist' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Artist' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Artist.java:66: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Artist.java:69: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Artist.java:84: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/userEntities/Artist.java:87: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/main/Main.java:85: Line is longer than 100 characters (found 138). [LineLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/main/Library.java:87:27: Parameter albums should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/main/Library.java:91:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/IdeaProjects/etapa2/./src/main/PrintOutput.java:17:22: Using the '.*' form of import should be avoided - commands.users.*. [AvoidStarImport]
[ERROR] /home/student/IdeaProjects/etapa2/./src/main/PrintOutput.java:18:29: Using the '.*' form of import should be avoided - commands.users.artist.*. [AvoidStarImport]
[ERROR] /home/student/IdeaProjects/etapa2/./src/main/PrintOutput.java:33:26: Using the '.*' form of import should be avoided - userEntities.audio.*. [AvoidStarImport]
[ERROR] /home/student/IdeaProjects/etapa2/./src/main/PrintOutput.java:42:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/student/IdeaProjects/etapa2/./src/main/PrintOutput.java:53:5: Method length is 487 lines (max allowed is 150). [MethodLength]
[ERROR] /home/student/IdeaProjects/etapa2/./src/main/PrintOutput.java:499:72: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/UserInput.java:15:29: Parameter username should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/UserInput.java:23:24: Parameter age should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/UserInput.java:31:25: Parameter city should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/UserInput.java:37:29: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/UserInput.java:38:48: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/UserInput.java:39:32: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/UserInput.java:40:42: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/Input.java:17:28: Parameter library should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/Input.java:25:26: Parameter users should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/Input.java:33:29: Parameter commands should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/Input.java:39:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/Input.java:40:38: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/Input.java:41:36: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/Input.java:42:42: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:19:5: Class 'FiltersInput' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FiltersInput' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:23:5: Class 'FiltersInput' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FiltersInput' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:23:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:27:5: Class 'FiltersInput' looks like designed for extension (can be subclassed), but the method 'getAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FiltersInput' final or making the method 'getAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:31:5: Class 'FiltersInput' looks like designed for extension (can be subclassed), but the method 'setAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FiltersInput' final or making the method 'setAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:31:26: Parameter album should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:35:5: Class 'FiltersInput' looks like designed for extension (can be subclassed), but the method 'getTags' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FiltersInput' final or making the method 'getTags' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:39:5: Class 'FiltersInput' looks like designed for extension (can be subclassed), but the method 'setTags' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FiltersInput' final or making the method 'setTags' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:39:25: Parameter tags should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:43:5: Class 'FiltersInput' looks like designed for extension (can be subclassed), but the method 'getLyrics' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FiltersInput' final or making the method 'getLyrics' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:47:5: Class 'FiltersInput' looks like designed for extension (can be subclassed), but the method 'setLyrics' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FiltersInput' final or making the method 'setLyrics' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:47:27: Parameter lyrics should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:51:5: Class 'FiltersInput' looks like designed for extension (can be subclassed), but the method 'getGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FiltersInput' final or making the method 'getGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:55:5: Class 'FiltersInput' looks like designed for extension (can be subclassed), but the method 'setGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FiltersInput' final or making the method 'setGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:55:26: Parameter genre should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:59:5: Class 'FiltersInput' looks like designed for extension (can be subclassed), but the method 'getReleaseYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FiltersInput' final or making the method 'getReleaseYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:63:5: Class 'FiltersInput' looks like designed for extension (can be subclassed), but the method 'setReleaseYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FiltersInput' final or making the method 'setReleaseYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:63:32: Parameter releaseYear should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:67:5: Class 'FiltersInput' looks like designed for extension (can be subclassed), but the method 'getArtist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FiltersInput' final or making the method 'getArtist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:71:5: Class 'FiltersInput' looks like designed for extension (can be subclassed), but the method 'setArtist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FiltersInput' final or making the method 'setArtist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:71:27: Parameter artist should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:75:5: Class 'FiltersInput' looks like designed for extension (can be subclassed), but the method 'getOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FiltersInput' final or making the method 'getOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:79:5: Class 'FiltersInput' looks like designed for extension (can be subclassed), but the method 'setOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FiltersInput' final or making the method 'setOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:79:26: Parameter owner should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:83:5: Class 'FiltersInput' looks like designed for extension (can be subclassed), but the method 'getFollowers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FiltersInput' final or making the method 'getFollowers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:87:5: Class 'FiltersInput' looks like designed for extension (can be subclassed), but the method 'setFollowers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FiltersInput' final or making the method 'setFollowers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:87:30: Parameter followers should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:91:5: Class 'FiltersInput' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FiltersInput' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:93:31: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:94:42: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:95:44: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:96:34: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:97:46: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:98:44: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:99:56: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:100:46: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:101:44: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/FiltersInput.java:102:52: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/CommandInput.java:21:25: Parameter type should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/CommandInput.java:29:28: Parameter command should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/CommandInput.java:37:29: Parameter username should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/CommandInput.java:45:30: Parameter timestamp should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/CommandInput.java:53:28: Parameter filters should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/CommandInput.java:61:31: Parameter itemNumber should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/CommandInput.java:69:31: Parameter repeatMode should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/CommandInput.java:77:31: Parameter playlistId should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/CommandInput.java:85:33: Parameter playlistName should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/CommandInput.java:93:25: Parameter seed should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/CommandInput.java:99:32: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/CommandInput.java:100:46: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/CommandInput.java:101:50: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/CommandInput.java:102:44: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/CommandInput.java:103:42: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/CommandInput.java:104:40: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/CommandInput.java:105:46: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/CommandInput.java:106:46: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/CommandInput.java:107:46: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/CommandInput.java:108:58: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/CommandInput.java:109:34: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/LibraryInput.java:17:26: Parameter songs should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/LibraryInput.java:25:29: Parameter podcasts should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/LibraryInput.java:33:26: Parameter users should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/LibraryInput.java:39:32: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/LibraryInput.java:40:34: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/LibraryInput.java:41:42: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/LibraryInput.java:42:36: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/PodcastInput.java:18:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/PodcastInput.java:26:26: Parameter owner should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/PodcastInput.java:34:29: Parameter episodes should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/PodcastInput.java:40:32: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/PodcastInput.java:41:40: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/PodcastInput.java:42:44: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/PodcastInput.java:43:42: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/EpisodeInput.java:15:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/EpisodeInput.java:23:29: Parameter duration should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/EpisodeInput.java:31:32: Parameter description should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/EpisodeInput.java:37:32: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/EpisodeInput.java:38:40: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/EpisodeInput.java:39:56: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/EpisodeInput.java:40:42: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/SongInput.java:22:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/SongInput.java:30:29: Parameter duration should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/SongInput.java:38:26: Parameter album should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/SongInput.java:46:25: Parameter tags should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/SongInput.java:54:27: Parameter lyrics should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/SongInput.java:62:26: Parameter genre should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/SongInput.java:70:32: Parameter releaseYear should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/SongInput.java:78:27: Parameter artist should be final. [FinalParameters]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/SongInput.java:84:29: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/SongInput.java:85:40: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/SongInput.java:86:42: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/SongInput.java:87:44: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/SongInput.java:88:34: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/SongInput.java:89:46: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/SongInput.java:90:44: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/SongInput.java:91:56: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/IdeaProjects/etapa2/./src/fileio/input/SongInput.java:92:46: '+' should be on a new line. [OperatorWrap]
Audit done.
Checkstyle ends with 436 errors.
